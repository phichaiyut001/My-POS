import type { Image as ImageData, ImageTransform, ImageToRasterOptions } from '@react-thermal-printer/image';
import { Align } from '@react-thermal-printer/printer';
import { ReactElement } from 'react';
import { ExtendHTMLProps } from '../types/HTMLProps';
import { Printable } from '../types/Printable';
declare type Props = ExtendHTMLProps<'img', {
    align?: Align;
    src: string;
    /**
     * Image transformer.
     * @example
     * // Greyscale dithering with floyd-steinberg algorithm.
     * import { transforms } from '@react-thermal-printer/image';
     *
     * <Image transforms={[transforms.floydSteinberg]} {...} />
     */
    transforms?: ImageTransform[];
    rgbToBlack?: ImageToRasterOptions['rgbToBlack'];
    /**
     * Image data reader
     * @default read data from <img /> and <canvas />
     */
    reader?: (elem: ReactElement<Props>) => Promise<ImageData>;
}>;
export declare const Image: Printable<Props>;
export {};
